import { Component, EventEmitter, Output } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';

@Component({
  selector: 'app-file-upload',
  templateUrl: './file-upload.component.html'
})
export class FileUploadComponent {
  uploadForm: FormGroup;
  selectedFile1: File;
  selectedFile2: File;

  @Output() filesUploaded = new EventEmitter<any>(); // Esemény a fájlok feltöltésekor

  constructor(private fb: FormBuilder) {
    this.uploadForm = this.fb.group({
      file1: [''],
      file2: ['']
    });
  }

  onFileSelect(event: any, fileNumber: number) {
    const file = event.target.files[0];
    if (fileNumber === 1) {
      this.selectedFile1 = file;
    } else {
      this.selectedFile2 = file;
    }
  }

  onSubmit() {
    const formData = new FormData();
    formData.append('file1', this.selectedFile1);
    formData.append('file2', this.selectedFile2);
    this.filesUploaded.emit(formData); // Emitálja az eseményt a szülő komponensnek
  }
}

<form [formGroup]="uploadForm" (ngSubmit)="onSubmit()">
  <label for="file1">File 1:</label>
  <input type="file" formControlName="file1" (change)="onFileSelect($event, 1)" />

  <label for="file2">File 2:</label>
  <input type="file" formControlName="file2" (change)="onFileSelect($event, 2)" />

  <button type="submit">Feltöltés</button>
</form>





import { Component, EventEmitter, Input, Output } from '@angular/core';

@Component({
  selector: 'app-id-select',
  templateUrl: './id-select.component.html'
})
export class IdSelectComponent {
  @Input() ids: string[] = []; // A szülő komponenstől kapott ID-k
  @Output() idSelected = new EventEmitter<string>(); // Esemény az ID kiválasztásakor

  onIdChange(event: any) {
    this.idSelected.emit(event.target.value); // Emitálja az eseményt a szülő komponensnek
  }
}

<label for="idSelect">Válassz ID-t:</label>
<select (change)="onIdChange($event)">
  <option *ngFor="let id of ids" [value]="id">{{ id }}</option>
</select>



import { Component, Input } from '@angular/core';
import { TableRow } from '../models/table-row.model'; // Interface importálása

@Component({
  selector: 'app-data-table',
  templateUrl: './data-table.component.html'
})
export class DataTableComponent {
  @Input() tableData: TableRow[] = []; // A szülőtől kapott adatok
}

<table *ngIf="tableData.length > 0">
  <thead>
    <tr>
      <th>Oszlop 1</th>
      <th>Oszlop 2</th>
      <th>Oszlop 3</th>
      <th>Oszlop 4</th>
      <th>Oszlop 5</th>
    </tr>
  </thead>
  <tbody>
    <tr *ngFor="let row of tableData">
      <td>{{ row.column1 }}</td>
      <td>{{ row.column2 }}</td>
      <td>{{ row.column3 }}</td>
      <td>{{ row.column4 }}</td>
      <td>{{ row.column5 }}</td>
    </tr>
  </tbody>
</table>



import { Component } from '@angular/core';
import { DataService } from '../services/data.service'; // Szolgáltatás importálása
import { TableRow } from '../models/table-row.model'; // Interface importálása

@Component({
  selector: 'app-main',
  templateUrl: './main.component.html'
})
export class MainComponent {
  ids: string[] = [];
  tableData: TableRow[] = [];

  constructor(private dataService: DataService) {}

  onFilesUploaded(formData: FormData) {
    this.dataService.uploadFiles(formData).subscribe(response => {
      this.ids = response.ids; // ID-k visszaadása
    });
  }

  onIdSelected(id: string) {
    this.dataService.getFileDataById(id).subscribe(response => {
      this.tableData = response.data; // Adatok beállítása
    });
  }
}

<app-file-upload (filesUploaded)="onFilesUploaded($event)"></app-file-upload>
<app-id-select [ids]="ids" (idSelected)="onIdSelected($event)"></app-id-select>
<app-data-table [tableData]="tableData"></app-data-table>





